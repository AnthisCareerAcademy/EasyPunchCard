name: Build on Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set PowerShell Execution Policy to Bypass
      run: |
        Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file (using API_KEY)
      run: |
        echo "Creating X_API key from secrets"
        echo "X_API=${{ secrets.API_KEY }}" > .env
      shell: pwsh

    - name: Build On Windows
      run: |
        echo "Building on Windows"
        
        # Set up Chocolatey
        echo "Setting up Chocolatey"
        Set-ExecutionPolicy AllSigned
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

        # Install Inno Setup Command Line Compiler
        echo "Installing Inno Setup"
        choco install innosetup

        # Build .exe
        echo "Building .exe with pyinstaller"
        pyinstaller build_instructions/EasyPunchCard.spec

        # Build Installer
        echo "Building installer with iscc"
        iscc build_instructions/easypunchcard_setup_script.iss

        # Delete all artifacts except the setup exe
        echo "Deleting artifacts except for installer"
        powershell Get-ChildItem -Path ./dist -Exclude 'EasyPunchCard_setup.exe' | foreach ($_) {
          ': Removing ' + $_.fullname
          Remove-Item $_.fullname -Force -Recurse
          ': Removed ' + $_.fullname
        }
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ runner.os }}-${{ github.run_id }}
        path: dist/

    - name: Upload Windows Release Asset
      if: runner.os == 'Windows'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: softprops/action-gh-release@v2.3.3
      with:
        files: dist/EasyPunchCard_setup.exe
